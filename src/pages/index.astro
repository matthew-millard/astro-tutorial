---
import BaseLayout from '../layouts/BaseLayout.astro';
import Divider from '../components/ui/Divider.astro';
import { articles } from '../data/blog-posts';
import PreviewCard from '../components/ui/PreviewCard.astro';
---

<BaseLayout pageTitle="Home">
  <div class="slot slot-container">
    <aside class="aside-left-container desktop-only">
      <div class="aside-left-header">
        <h3>Articles</h3>
      </div>
      <nav class="aside-left-content">
        <ul>
          {
            articles.map(article => {
              const hasBeenUpdated = article.updatedAt ? true : false;
              return (
                <a href={`/${article.slug}`}>
                  <li>
                    <p>
                      <span class="article-date">
                        {hasBeenUpdated ? `Updated: ${article.updatedAt}` : `Published: ${article.createdAt}`}
                      </span>
                      {article.title}
                    </p>
                  </li>
                </a>
              );
            })
          }
        </ul>
      </nav>
    </aside>

    <main class="main-container">
      <div class="main-content">
        <div class="main-heading">
          <h1>Welcome</h1>
          <p class="lead">I'm excited to launch my new blog all about web development.</p>
        </div>

        <div class="main-copy">
          <p>
            The purpose of this blog is to document my coding journey and share the insights and solutions I've picked
            up along the way with other developers.
          </p>
          <p>
            Since I began learning to code in January 2023, one of the biggest takeaways has been this: the cleanest and
            most effective solutions are often found in documentation or in blog posts written by other developers who
            have run into the same issues.
          </p>
          <p>
            I’ve come to realize that I retain knowledge far better when I take the time to teach what I’ve
            learned—whether that’s breaking down a tricky concept, walking through a solution, or simply reflecting on
            what worked (and what didn’t).
          </p>
          <p>
            This blog is my way of contributing back to the developer community while reinforcing my own learning.
            Thanks for stopping by—and I hope you find something here that helps you on your own coding journey.
          </p>
        </div>
      </div>
    </main>
  </div>

  <style>
    .slot-container {
      display: grid;
    }

    .main-container {
      padding-inline: 1rem;
      padding-block: 2rem;
    }

    .main-heading {
      margin-block-end: 1rem;
    }

    @media (min-width: 1280px) {
      .slot-container {
        grid-template-columns: repeat(12, 1fr);
      }

      .main-heading {
        grid-column: span 2;
      }

      .main-copy {
        grid-row: 2;
        grid-column: 1;
      }

      .aside-left-container {
        grid-column: 1 / 3;
        display: grid;
        grid-template-rows: min-content auto;
        /* border-right: 1px solid var(--border-50); */
        background-color: var(--background-aside-left);
      }

      .aside-left-content {
        ul {
          a {
            display: block;
            color: var(--text);
            text-decoration: none;
            transition: background-color 0.2s ease;

            li {
              padding: 1rem;
            }

            p {
              display: grid;
              font-weight: var(--font-medium);

              .article-date {
                font-size: var(--text-xs);
                font-weight: var(--font-normal);
                font-style: oblique;
                color: var(--text-muted);
              }
            }
          }

          a:hover {
            background-color: var(--background-hover);
          }

          a:active {
            background-color: var(--background-active);
          }
        }
      }

      .aside-left-header {
        padding-inline: 1rem;
        margin-top: 2rem;
        padding-bottom: 0.5rem;
      }

      .main-container {
        grid-column: 3 / 12;
        display: grid;
      }
    }
  </style>
</BaseLayout>
